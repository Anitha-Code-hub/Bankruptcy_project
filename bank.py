
"""bank.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BHBK1Bb8icfCunmuOtrcllXfjo182Ts7
"""


import pandas as pd
import streamlit as st
from pickle import dump
from pickle import load

st.title('Model Deployment: Bankruptcy')

st.sidebar.header('User Input Parameters')


def user_input_features():
    Operating_Expense_Rate = st.sidebar.number_input("Insert Operating Expense Rate")
    Research_and_development_expense_rate = st.sidebar.number_input("Insert Research and Development Expense Rate")
    Interest_bearing_debt_interest_rate = st.sidebar.number_input("Insert Interest Bearing Debt Interest Rate")
    Tax_rate_A = st.sidebar.number_input("Insert Tax Rate (A)")
    Revenue_Per_Share_Yuan = st.sidebar.number_input("Insert Revenue Per Share (Yuan ¥)")
    Total_Asset_Growth_Rate = st.sidebar.number_input("Insert Total Asset Growth Rate")
    Net_Value_Growth_Rate = st.sidebar.number_input("Insert Net Value Growth Rate")
    Current_Ratio = st.sidebar.number_input("Insert Current Ratio")
    Quick_Ratio = st.sidebar.number_input("Insert Quick Ratio")
    Total_debt_Total_net_worth = st.sidebar.number_input("Insert Total Debt/Total Net Worth")

    data = {
        'Operating_Expense_Rate': Operating_Expense_Rate,
        'Research_and_development_expense_rate': Research_and_development_expense_rate,
        'Interest_bearing_debt_interest_rate': Interest_bearing_debt_interest_rate,
        'Tax_rate_(A)': Tax_rate_A,
        'Revenue_Per_Share_(Yuan_¥)': Revenue_Per_Share_Yuan,
        'Total_Asset_Growth_Rate': Total_Asset_Growth_Rate,
        'Net_Value_Growth_Rate': Net_Value_Growth_Rate,
        'Current_Ratio': Current_Ratio,
        'Quick_Ratio': Quick_Ratio,
        'Total_debt/Total_net_worth': Total_debt_Total_net_worth
    }

    features = pd.DataFrame(data, index=[0])
    return features

df = user_input_features()
st.subheader('User Input Parameters')
st.write(df)



# load the model from disk
# load the model from disk
loaded_model = load(open('Bankruptcy2.sav', 'rb'))
if loaded_model:
    if st.button('Predict'):
        prediction = loaded_model.predict(df)
        prediction_proba = loaded_model.predict_proba(df)

        st.subheader('Predicted Result')
        st.write('No' if prediction[0] == 0 else 'Yes')

        st.subheader('Prediction Probability')
        st.write(prediction_proba)

